//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/AirplanePhysics/Code/Scripts/Input/NewInputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @NewInputControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @NewInputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""NewInputControls"",
    ""maps"": [
        {
            ""name"": ""Airplane"",
            ""id"": ""206c84f9-962a-465a-884a-e3710e3e41de"",
            ""actions"": [
                {
                    ""name"": ""Brake"",
                    ""type"": ""Value"",
                    ""id"": ""d2478038-107d-49e9-bfe4-59a628b23c73"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pitch"",
                    ""type"": ""Button"",
                    ""id"": ""a71bf9ee-a31a-4902-9978-b6d3981138fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""5371df31-f515-45e6-b963-4b87446d35d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throttle"",
                    ""type"": ""Button"",
                    ""id"": ""b1d87573-a363-4b66-8229-233e77196cb3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Yaw"",
                    ""type"": ""Button"",
                    ""id"": ""aaf83614-fab5-407d-a192-40b13b83ff4c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EngineCut"",
                    ""type"": ""Button"",
                    ""id"": ""2bb2d53e-c809-43e9-b16c-513d37ba2bf9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraSwitch"",
                    ""type"": ""Button"",
                    ""id"": ""d2d76fc5-3eeb-4c5c-9f8d-d9f61b7b02ef"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Flaps"",
                    ""type"": ""Button"",
                    ""id"": ""6ac30c2b-d872-41d7-a1ee-c2e73f74666d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0bf386cd-47fa-4568-8f77-ff9401e23eb7"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6650c10c-b8b3-4cc0-b23f-1ca03335a4cd"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""47df1eef-1bbd-4a44-9488-a6b93bbd5e98"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2dec9d7d-5e9f-4b0a-aea4-c7e37b48bcba"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""122625a2-5f07-4610-aed8-f90c8e1980ee"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""fa2f3b25-4f2e-4ac9-a43c-d9b70ceeb6a9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""fd55fccf-6efe-471c-9d86-7846f0e76650"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""b2ae853b-f707-458a-b36b-3f0d8b8c60ae"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""a6376578-7a88-47e1-96fc-b767e0911e2b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""dcf25a46-6290-4ccc-a5e1-18bd532234dd"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""c64fe72a-46f8-4a5b-9fb2-fc93ba57e215"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""21793561-7f0e-4199-a563-a05beeea53e2"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""6b5ee89d-c884-42d4-8083-bce47d93f745"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""e02c83cf-907d-4aa0-942d-f303a13b9ab6"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Yaw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9e55df20-d1af-4a30-8853-5806996e71a9"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EngineCut"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""599a5dcf-d097-498f-9825-e659380d371f"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e012da95-ebd8-419d-9789-200dd0ea8846"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flaps"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ae0763a-161a-43b1-8f45-8ff7eb04d57e"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flaps"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Airplane
        m_Airplane = asset.FindActionMap("Airplane", throwIfNotFound: true);
        m_Airplane_Brake = m_Airplane.FindAction("Brake", throwIfNotFound: true);
        m_Airplane_Pitch = m_Airplane.FindAction("Pitch", throwIfNotFound: true);
        m_Airplane_Roll = m_Airplane.FindAction("Roll", throwIfNotFound: true);
        m_Airplane_Throttle = m_Airplane.FindAction("Throttle", throwIfNotFound: true);
        m_Airplane_Yaw = m_Airplane.FindAction("Yaw", throwIfNotFound: true);
        m_Airplane_EngineCut = m_Airplane.FindAction("EngineCut", throwIfNotFound: true);
        m_Airplane_CameraSwitch = m_Airplane.FindAction("CameraSwitch", throwIfNotFound: true);
        m_Airplane_Flaps = m_Airplane.FindAction("Flaps", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Airplane
    private readonly InputActionMap m_Airplane;
    private IAirplaneActions m_AirplaneActionsCallbackInterface;
    private readonly InputAction m_Airplane_Brake;
    private readonly InputAction m_Airplane_Pitch;
    private readonly InputAction m_Airplane_Roll;
    private readonly InputAction m_Airplane_Throttle;
    private readonly InputAction m_Airplane_Yaw;
    private readonly InputAction m_Airplane_EngineCut;
    private readonly InputAction m_Airplane_CameraSwitch;
    private readonly InputAction m_Airplane_Flaps;
    public struct AirplaneActions
    {
        private @NewInputControls m_Wrapper;
        public AirplaneActions(@NewInputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Brake => m_Wrapper.m_Airplane_Brake;
        public InputAction @Pitch => m_Wrapper.m_Airplane_Pitch;
        public InputAction @Roll => m_Wrapper.m_Airplane_Roll;
        public InputAction @Throttle => m_Wrapper.m_Airplane_Throttle;
        public InputAction @Yaw => m_Wrapper.m_Airplane_Yaw;
        public InputAction @EngineCut => m_Wrapper.m_Airplane_EngineCut;
        public InputAction @CameraSwitch => m_Wrapper.m_Airplane_CameraSwitch;
        public InputAction @Flaps => m_Wrapper.m_Airplane_Flaps;
        public InputActionMap Get() { return m_Wrapper.m_Airplane; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AirplaneActions set) { return set.Get(); }
        public void SetCallbacks(IAirplaneActions instance)
        {
            if (m_Wrapper.m_AirplaneActionsCallbackInterface != null)
            {
                @Brake.started -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnBrake;
                @Brake.performed -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnBrake;
                @Brake.canceled -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnBrake;
                @Pitch.started -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnPitch;
                @Pitch.performed -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnPitch;
                @Pitch.canceled -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnPitch;
                @Roll.started -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnRoll;
                @Throttle.started -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnThrottle;
                @Throttle.performed -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnThrottle;
                @Throttle.canceled -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnThrottle;
                @Yaw.started -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnYaw;
                @Yaw.performed -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnYaw;
                @Yaw.canceled -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnYaw;
                @EngineCut.started -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnEngineCut;
                @EngineCut.performed -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnEngineCut;
                @EngineCut.canceled -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnEngineCut;
                @CameraSwitch.started -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnCameraSwitch;
                @CameraSwitch.performed -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnCameraSwitch;
                @CameraSwitch.canceled -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnCameraSwitch;
                @Flaps.started -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnFlaps;
                @Flaps.performed -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnFlaps;
                @Flaps.canceled -= m_Wrapper.m_AirplaneActionsCallbackInterface.OnFlaps;
            }
            m_Wrapper.m_AirplaneActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Brake.started += instance.OnBrake;
                @Brake.performed += instance.OnBrake;
                @Brake.canceled += instance.OnBrake;
                @Pitch.started += instance.OnPitch;
                @Pitch.performed += instance.OnPitch;
                @Pitch.canceled += instance.OnPitch;
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
                @Throttle.started += instance.OnThrottle;
                @Throttle.performed += instance.OnThrottle;
                @Throttle.canceled += instance.OnThrottle;
                @Yaw.started += instance.OnYaw;
                @Yaw.performed += instance.OnYaw;
                @Yaw.canceled += instance.OnYaw;
                @EngineCut.started += instance.OnEngineCut;
                @EngineCut.performed += instance.OnEngineCut;
                @EngineCut.canceled += instance.OnEngineCut;
                @CameraSwitch.started += instance.OnCameraSwitch;
                @CameraSwitch.performed += instance.OnCameraSwitch;
                @CameraSwitch.canceled += instance.OnCameraSwitch;
                @Flaps.started += instance.OnFlaps;
                @Flaps.performed += instance.OnFlaps;
                @Flaps.canceled += instance.OnFlaps;
            }
        }
    }
    public AirplaneActions @Airplane => new AirplaneActions(this);
    public interface IAirplaneActions
    {
        void OnBrake(InputAction.CallbackContext context);
        void OnPitch(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnThrottle(InputAction.CallbackContext context);
        void OnYaw(InputAction.CallbackContext context);
        void OnEngineCut(InputAction.CallbackContext context);
        void OnCameraSwitch(InputAction.CallbackContext context);
        void OnFlaps(InputAction.CallbackContext context);
    }
}
